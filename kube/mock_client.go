// Automatically generated by MockGen. DO NOT EDIT!
// Source: github.com/box/kube-applier/kube

package kube

import (
	gomock "github.com/golang/mock/gomock"
)

// Mock of ClientInterface interface
type MockClientInterface struct {
	ctrl     *gomock.Controller
	recorder *_MockClientInterfaceRecorder
}

// Recorder for MockClientInterface (not exported)
type _MockClientInterfaceRecorder struct {
	mock *MockClientInterface
}

func NewMockClientInterface(ctrl *gomock.Controller) *MockClientInterface {
	mock := &MockClientInterface{ctrl: ctrl}
	mock.recorder = &_MockClientInterfaceRecorder{mock}
	return mock
}

func (_m *MockClientInterface) EXPECT() *_MockClientInterfaceRecorder {
	return _m.recorder
}

func (_m *MockClientInterface) Apply(_param0 string) (string, string, error) {
	ret := _m.ctrl.Call(_m, "Apply", _param0)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(string)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

func (_mr *_MockClientInterfaceRecorder) Apply(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Apply", arg0)
}

func (_m *MockClientInterface) CheckVersion() error {
	ret := _m.ctrl.Call(_m, "CheckVersion")
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockClientInterfaceRecorder) CheckVersion() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "CheckVersion")
}
