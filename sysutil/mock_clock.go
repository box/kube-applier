// Automatically generated by MockGen. DO NOT EDIT!
// Source: github.com/box/kube-applier/util

package sysutil

import (
	gomock "github.com/golang/mock/gomock"
	time "time"
)

// Mock of ClockInterface interface
type MockClockInterface struct {
	ctrl     *gomock.Controller
	recorder *_MockClockInterfaceRecorder
}

// Recorder for MockClockInterface (not exported)
type _MockClockInterfaceRecorder struct {
	mock *MockClockInterface
}

func NewMockClockInterface(ctrl *gomock.Controller) *MockClockInterface {
	mock := &MockClockInterface{ctrl: ctrl}
	mock.recorder = &_MockClockInterfaceRecorder{mock}
	return mock
}

func (_m *MockClockInterface) EXPECT() *_MockClockInterfaceRecorder {
	return _m.recorder
}

func (_m *MockClockInterface) Now() time.Time {
	ret := _m.ctrl.Call(_m, "Now")
	ret0, _ := ret[0].(time.Time)
	return ret0
}

func (_mr *_MockClockInterfaceRecorder) Now() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Now")
}

func (_m *MockClockInterface) Since(_param0 time.Time) time.Duration {
	ret := _m.ctrl.Call(_m, "Since", _param0)
	ret0, _ := ret[0].(time.Duration)
	return ret0
}

func (_mr *_MockClockInterfaceRecorder) Since(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Since", arg0)
}

func (_m *MockClockInterface) Sleep(_param0 time.Duration) {
	_m.ctrl.Call(_m, "Sleep", _param0)
}

func (_mr *_MockClockInterfaceRecorder) Sleep(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Sleep", arg0)
}
